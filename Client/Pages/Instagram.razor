@page "/Instagram"
@inject AntiBotIO.Client.Shared.Models.PostsDTO posts
@inject AntiBotIO.Client.Shared.Models.Post MPost

@inject HttpClient httpClient
@inject Shared.Models.JSONModel jsonModel

<h3>Instagram</h3>
<EditForm OnSubmit="@GetPosts" Model="@posts">
    <InputText @bind-Value="posts.UserName" />
    <InputNumber @bind-Value="posts.PostCount" />
    <button type="submit">Get Posts</button>
</EditForm>


@if (!string.IsNullOrEmpty(apiResponse))
{
    @foreach (var item in L_posts)
    {
        <div class="card" style="width: 18rem;">
            <img class="card-img-top" src="https://via.placeholder.com/150" alt="Card image cap">
            <div class="card-body">
                <h5 class="card-title">@item.Caption</h5>
                <p class="card-text">Post Id : @item.Id -- Post Short Code : @item.ShortCode </p>
                <p class="card-text">Coment Count : @item.CommentCount -- Post Date : @item.Date</p>
            </div>
        </div>
    }

}


@code {
    private string apiResponse;
    private string PostCaption;
    private string CommentCount;
    private string PostId;
    private string ShortCode;
    private DateTime PostDate;
    List<Post> L_posts = new List<Post>();
    public async Task<List<Post>> GetPosts()
    {
        // Kullanıcının girdiği verileri alın
        var userName = posts.UserName;
        var postCount = posts.PostCount;

        // Web API'ye gönderilecek verileri oluşturun
        var request = await httpClient.GetAsync($"api/Instagram/GetPosts?userId={userName}");

        // Web API'ye istek gönderin


        if (request.IsSuccessStatusCode)
        {
            // Web API'den gelen yanıtı alın
            apiResponse = await request.Content.ReadAsStringAsync();

            @* var jsonResponse = Newtonsoft.Json.Linq.JObject.Parse(apiResponse); *@

            var jsonResponse = Newtonsoft.Json.JsonConvert.DeserializeObject<Shared.Models.JSONModel>(apiResponse);

            if (jsonResponse.data.items.Count >= postCount)
            {
                for (int i = 0; i < postCount; i++)
                {
                    var item = jsonResponse.data.items[i];

                    // Extract post data
                    string postCaption = item.captions.items[0].ToString();
                    string commentCount = item.comments.count.ToString();
                    string postId = item.id.ToString();
                    string shortCode = item.code.ToString();
                    DateTime postDate = DateTimeOffset.FromUnixTimeSeconds(item.taken_at_timestamp).DateTime;

                    // Create object to hold data
                    Post PostData = new Post();
                    PostData.Caption = postCaption;
                    PostData.CommentCount = commentCount;
                    PostData.Id = postId;
                    PostData.ShortCode = shortCode;
                    PostData.Date = postDate;

                    // Add to list
                    L_posts.Add(PostData);
                }
            }
            else
            {
                // Handle the case where there are fewer items in the array than postCount
            }
            return L_posts;

        }
        else
        {
            return L_posts;
        }
    }
}